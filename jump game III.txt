   JUMP GAME III 
Input: arr = [4,2,3,0,3,1,2], start = 5
Output: true
Explanation: 
All possible ways to reach at index 3 with value 0 are: 
index 5 -> index 4 -> index 1 -> index 3 
index 5 -> index 6 -> index 4 -> index 1 -> index 3 


bool canReach(vector<int>& arr, int start) {
        if(start < 0 || start >= arr.size()) 
            return false ;
        if(arr[start] == 0) 
            return true ;
        if(arr[start] == -1) 
            return false ;
        else
        {
            int k = arr[start] ;
            arr[start] = -1 ;
            return (canReach(arr , start + k) || canReach(arr , start-k)) ;
        }
    }